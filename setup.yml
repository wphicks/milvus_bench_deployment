---
- name: Clone necessary repos
  hosts: localhost
  connection: local

  tasks:
    - name: Clone Milvus
      git:
        repo: https://github.com/wphicks/milvus.git
        dest: "{{ inventory_dir }}/milvus"
        version: dev-cagra2
      tags: repo

    - name: Create '.docker-gpu' directory
      file:
        path: "{{ inventory_dir }}/milvus/.docker-gpu"
        state: directory
      tags: build

    - name: Clean Milvus build
      command: "./build/builder_gpu.sh make clean"
      args:
        chdir: "{{ inventory_dir }}/milvus"
      tags: libs

    - name: Build Milvus libs
      command: "./build/builder_gpu.sh make milvus-gpu"
      args:
        chdir: "{{ inventory_dir }}/milvus"
      environment:
        CHECK_BUILDER: 1
      tags:
          - build
          - never

    - name: Copy Milvus libs to expected location
      synchronize:
        src: "{{ inventory_dir }}/milvus/cmake_build/lib/"
        dest: "{{ inventory_dir }}/milvus/lib/"
        delete: yes
      tags:
          - build
          - never

    - name: Build Milvus Docker image
      docker_image:
        name: gitlab-master.nvidia.com:5005/whicks/milvus:2.3.1-preview
        source: build
        build:
          path: "{{ inventory_dir }}/milvus"
          dockerfile: "{{ inventory_dir }}/milvus/build/docker/milvus/gpu/ubuntu20.04/Dockerfile"
        force_source: true
      tags:
          - build
          - never

    - name: Clone VectorDBBench
      git:
        repo: https://github.com/wphicks/VectorDBBench.git
        dest: "{{ inventory_dir }}/VectorDBBench"
        version: dev-gpu
      tags: repo

    - name: Build VectorDBBench Docker image
      docker_image:
        name: gitlab-master.nvidia.com:5005/whicks/milvus:vdb-2.3.1-preview
        source: build
        build:
          path: "{{ inventory_dir }}"
          dockerfile: "{{ inventory_dir }}/Dockerfile"
        force_source: true
      tags:
          - build
          - never

    - name: Create 'volumes' directory
      file:
        path: "{{ inventory_dir }}/volumes"
        state: directory
      tags: setup

    - name: Create 'volumes/etcd' directory
      file:
        path: "{{ inventory_dir }}/volumes/etcd"
        state: directory
      tags: setup

    - name: Create 'volumes/minio' directory
      file:
        path: "{{ inventory_dir }}/volumes/minio"
        state: directory
      tags: setup

    - name: Create 'volumes/milvus' directory
      file:
        path: "{{ inventory_dir }}/volumes/milvus"
        state: directory
      tags: setup

    - name: Create 'volumes/dataset' directory
      file:
        path: "{{ inventory_dir }}/volumes/dataset"
        state: directory
      tags: setup

    - name: Create 'volumes/results' directory
      file:
        path: "{{ inventory_dir }}/volumes/results"
        state: directory
      tags: setup

    - name: Pull Milvus and VectorDBBench if not building
      command: docker-compose pull
      args:
        chdir: "{{ inventory_dir }}"
      when: "'build' not in (play_tags | default([])"
      tags: docker_compose

    - name: Deploy Milvus and VectorDBBench
      command: docker-compose up -d
      args:
        chdir: "{{ inventory_dir }}"
      tags: docker_compose
